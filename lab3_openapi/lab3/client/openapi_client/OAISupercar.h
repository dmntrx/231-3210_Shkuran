/**
 * Supercar API
 * API для управления данными о суперкарах
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISupercar.h
 *
 * 
 */

#ifndef OAISupercar_H
#define OAISupercar_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISupercar : public OAIObject {
public:
    OAISupercar();
    OAISupercar(QString json);
    ~OAISupercar() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCarBrand() const;
    void setCarBrand(const QString &car_brand);
    bool is_car_brand_Set() const;
    bool is_car_brand_Valid() const;

    QString getCarModel() const;
    void setCarModel(const QString &car_model);
    bool is_car_model_Set() const;
    bool is_car_model_Valid() const;

    QString getBrandCountry() const;
    void setBrandCountry(const QString &brand_country);
    bool is_brand_country_Set() const;
    bool is_brand_country_Valid() const;

    QDate getReleaseDate() const;
    void setReleaseDate(const QDate &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    qint32 getMaxSpeed() const;
    void setMaxSpeed(const qint32 &max_speed);
    bool is_max_speed_Set() const;
    bool is_max_speed_Valid() const;

    QString getEngineName() const;
    void setEngineName(const QString &engine_name);
    bool is_engine_name_Set() const;
    bool is_engine_name_Valid() const;

    static OAISupercar fromJson(const QByteArray &jsonData);


    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_car_brand;
    bool m_car_brand_isSet;
    bool m_car_brand_isValid;

    QString m_car_model;
    bool m_car_model_isSet;
    bool m_car_model_isValid;

    QString m_brand_country;
    bool m_brand_country_isSet;
    bool m_brand_country_isValid;

    QDate m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    qint32 m_max_speed;
    bool m_max_speed_isSet;
    bool m_max_speed_isValid;

    QString m_engine_name;
    bool m_engine_name_isSet;
    bool m_engine_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISupercar)

#endif // OAISupercar_H
